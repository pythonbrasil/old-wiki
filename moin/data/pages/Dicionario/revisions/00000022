#pragma section-numbers off


= Dicionário =

Termos utilizados nas traduções (veja a página do PythonDoc). Adicione/Comente os termos. Se for adicionar, fique atento para que fiquem em ordem alfabética.

/!\ Aviso: Sempre que for manter uma expressão em inglês coloque-a com: \emph{English term}. Isso fará com que a palavra ou expressão em idioma estrangeiro apareça em itálico no texto final.

(!) Utilize o charset ISO-8859-1 na edição dos textos. O LaTeX usado para 'compilar' a documentação não gosta muito do charset UTF8. Portanto, configure seu editor de textos para edição em '''ISO-8859-1'''.

(!) Lembre-se de sempre atualizar o arquivo DICIONARIO no CVS ao alterar o significado de uma palavra aqui.  Dessa forma o arquivo não se torna obsoleto.

== A ==

   * '''a.k.a.''' - também chamado, também referenciado como.
   * '''array''' - matriz, vetor (quando unidimensional)
   * '''append''' - anexar
   * '''assignment''' - designação, atribuição ("''[...]targets that are identifiers if occurring in an assignment''.") 
   * '''augmented''' - como em ''augmented assignment''. incrementar? atribuição incremental?
   * '''Availability:''' - "Disponibilidade:".

== B ==

   * '''base class''' - classe base, classe mãe
   * '''binding''' - ligação? (''name binding'')
   * '''to bind''' - ligar, conectar
   * '''built-in''' - interno (como em: ''built-in method''), embutido
   * '''bytecode''' - ''bytecode''

== C ==

   * '''callable''' - executável, chamável
   * '''call (substantivo)''' - chamada
   * '''to call (verbo)''' - chamar, executar
   * '''to cast (verbo)''' - computar
   * '''to catch (verbo)''' - capturar (contexto: ''catching a exception'')
   * '''to check (verbo)''' - verificar
   * '''construct''' - estrutura, construção (dependendo do caso)

== D ==

   * '''default''' - padrão, inicial ou ''default'' mesmo, depende do caso e da estética.
   * '''deprecated''' - obsoleto, tornado obsoleto
   * '''dictionary''' - dicionário
   * '''doc string''' - ''doc string'' mesmo, mas em alguns casos "string de documentação" pode ser usado.
   * '''demo''' - exemplo, demonstração

== E ==

   * '''environment''' - (''code block environment'') ambiente
   * '''escape sequences''' - sequências de escape
   * '''to embed''' - anexar, embutir, agregar, acoplar
   * '''Embedding''' - acoplamento
   * '''e.g.''' - por exemplo
== F ==

   * '''fallback''' - chamada alternativa
   * '''flavor''' - tipo (favor nunca usar "sabor", ''flavor'' é uma expressão comum lá mas sabor não é comum aqui)
      *''Uma possibilidade seria usar "variação" ou "variedade" -- PedroDeMedeiros''
   * '''frame''' - quadro (era: ? (''execution frame''). ''Frame HTML'' deixar ''frame'' mesmo.)
      *''"frame" pode ser uma região de memória e "frame pointer" é um ponteiro para o registro de ativação -- PedroDeMedeiros''

== G ==

   * '''garbage collect (substantivo)''' - coleta de lixo (observe que é preferível manter a sigla ''GC'' do que traduzi-la para CG)
   * '''to garbage collect (verbo)''' - coletar o lixo

== H ==

   * '''handler''' - manipulador (''exception handler'')
   * '''hard-coded''' - fixado, fixo, imutável

== I ==

   * '''identifier''' - identificador
   * '''immutable''' - imutável
   * '''indent''' - indentação
   * '''instance''' - instância
   * '''iterator''' - iterador

== K ==

   * '''key''' - chave (dicionário), tecla (teclado)
   * '''keyword argument''' - argumento chave-valor ou argumento nomeado (?)
      *''Li "chave-valor" numa tradução do tutorial, mas acho que nomeado fica melhor -- RenataPalazzo''

== L ==

   * '''list comprehension''' - compreensão de lista
      * ''Eu acho que o ''comprehension'' é usado no sentido de compreensão, termo vindo da lógica: "Extensão é o conjunto de objetos designados por um termo ou uma categoria. Compreensão é o conjunto de propriedades que esse mesmo termo ou essa categoria designa. -- GuilhermeManika'' 
      *''Que tal Construção ou Contenção ? -- PedroWerneck''
   * '''list''' - lista

== M ==

   * '''mapping object''' - mapeamento de objeto

== N ==

   * '''namespace''' - ''namespace''
   * '''nested''' - aninhado
   * '''no-op''' - na maioria dos casos manter como o original faz sentidos, em outros compensa criar expressões como "a operação não causa nenhum efeito."

== O ==

   * '''offset''' - deslocamento
   * '''operadores lógicos''' - ficam com nome em inglês

== P ==

   * '''package''' - pacote
   * '''parser''' - fica ''parser'' mesmo (?)
      * ''Analisador gramatical é uma alternativa, mas o termo ''parser'' é tão comum que não vale a pena mexer - mesmo caso que "string" -- GuilhermeManika'' 
      * ''Em alguns casos, preferi usar analisador ou análise sintática por questões estéticas -- AlexandreNalon''
   * '''pre-order walk''' - percurso (de uma árvore) em ordem pré-fixada

== R ==

   * '''race condition''' - Condição de corrida (vale a pena especificar entre parênteses a expressão original)
   * '''raise''' - levantar (contexto: ''to raise an exception'')
   * '''raw''' - não processado (''raw data'' == dados não processados), bruto (''raw value'' == valor bruto)
   * '''read-only''' - "somente leitura", "somente-leitura" ou "somente para leitura"?
   * '''to resolve''' - ? (contexto: ''resolved names'')
   * '''return value''' - valor de retorno
   * '''run-time''' - tempo de execução

== S ==

   * '''seek, seekable''' - rastrear, rastreável
   * '''shell''' - interpretador, interpretador interativo
   * '''slice, slicing''' - fatiar, fatiando
   * '''stack backtrace''' - rastro da pilha de chamada
   * '''statement''' - instrução, comando
   * '''string''' - string (adicionar nota de rodapé caso o documento seja para ''newbies'')
      * ''Que tal "seqüência de caracteres"? -- PedroDeMedeiros''
   * '''subclass (substantivo)''' - subclasse, classe derivada, classe filha.
   * '''to subclass (verbo)''' - herdar (esse é um uso estrito), derivar.

== T ==

   * '''token''' - símbolo (na primeira ocorrência de um documento, colocar ''token'' entre parênteses)
   * '''top-level''' - nível mais alto
   * '''trace (tracing)''' - mantém em inglês mesmo
      * ''Rastrear é uma boa alternativa -- AlexandreNalon''
      * ''Também acho, mas pode-se fazer assim: "... tracing (rastreando) ..." na primeira ocorrência desta expressão no documento. -- OsvaldoSantanaNeto''
   * '''truncate''' - truncar, como em "''and the file is truncated in the point X''" => "e o arquivo é truncado no ponto X"
   * '''debug (debugging)''' - depurar
   * '''tuple''' - tupla

== V ==

   * '''value''' - valor (dicionário, retorno de funções)

== W ==

   * '''workaround''' - contorno ("''as a workaround for the XYZ problem''" -> "como um contorno ao problema XYZ")

== Y ==

   * '''yield''' - no sentido de "''the function then yields ''\var{y*2}'' for every ''\var{y}", "retorna como valor" ou "resulta em": "a função então retorna como valor \var{y*2} para todo \var{y}".



= Dicionário de palavras em português =

Nesta sub-seção vou colocar algumas palavras do português que precisamos ficar atentos ao escrever:

   * Licença (e não licensa)
   * Estender/extensão (e não extender, como em extend, ou estensão, como algo parecido com distensão)
   * Exceção (e não excessão, ou coisa do tipo)
   * Sessão, seção/secção e cessão (significam respectivamente: intervalo de tempo, fatiar, ceder)
