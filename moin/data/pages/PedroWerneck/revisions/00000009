#pragma section-numbers off
= Pedro Werneck =

Python teve uma importância grande na minha vida profissional, porque eu nunca tinha considerado seriamente a possibilidade de me dedicar profissionalmente na área de programação até conhecê-la. Eletrônica era meu hobby desde os 9 anos, mas com 10 eu ganhei um computador (um lindo 286) e graças a um amigo acabei adotando a programação como segundo hobby. Logo a complexidade dos meus projetos de eletrônica ultrapassou as possibilidades práticas de realização ''caseira'' e a programação tomou o lugar. 


Desde então passei a ter um interesse crescente por linguagens de programação, difícil de ser satisfeito em uma cidade de 20,000 habitantes, onde a única opção de aprendizado eram os livros paleozóicos da biblioteca pública, e conseguir um compilador era quase impossível. Eu me interessava, mas ainda não tinha ''aquela'' paixão. :) Há cerca de três anos conheci Python, meio que por acaso, enquanto instalava o FreeBSD Unix em uma máquina, e foi amor à primeira vista. Eu já programava em Perl, e até gostava, mas a simplicidade e o poder da sintaxe de Python me fascinaram. 


Infelizmente, eu tive o mesmo problema que acredito que muitos usuários de Python têm: convencer os colegas de trabalho. Eu era sócio em um ISP, onde a maioria das tarefas de administração eram feitas com Perl, algo perfeitamente aceitável. Mas o meu sócio insistia em usá-la também para Web. Logo a intransigência em aceitar o que era claramente uma opção melhor (por um motivo tão absurdo que nem merece ser citado) se juntou aos outros conflitos e deixei a sociedade.


De lá pra cá, procurei me aprofundar o máximo possível na linguagem. Profissionalmente, fiz alguns trabalhos free-lancer desenvolvendo softwares comerciais e tive ótimos resultados usando Python como primeira linguagem em cursos de programação. 


O único grande defeito de Python na minha opinião, é que depois de conhecê-la você perde muito o interesse em aprender outras linguagens :). Só Eiffel e Lua me pareceram interessantes.


= Colaborações =

Algumas das minhas colaborações relacionadas à linguagem Python

== Projetos ==

 * PythonDoc - Projeto de tradução da documentação oficial da linguagem Python para o Português.

 * HoneyPython - Framework de rede assíncrono para a criação de Honeypots (originalmente criado para o projeto Honeypot-BR http://www.honeypot.com.br).


== Artigos ==

 * TestDrivenDevelopment - Artigo sobre um dos aspectos da metodologia Extreme Programming e exemplos de como adotar unittests em seu código.

 * ReferênciasCruzadas - Como evitar problemas com referências circulares usando os módulos weakref e gc.

 * ["ComparaçãoDeGUIs"] - Breve análise, vantagens, desvantagens e outros detalhes das principais bibliotecas para desenvolvimento de interfaces gráficas disponíveis para Python.


== Traduções ==

 * UnificandoTiposClasses - Tradução de artigo de Guido Van Rossum sobre as alterações radicais feitas na linguagem na versão 2.2.

 * GuiaDeEstilo - Tradução da PEP-8 - Python Style Guidelines para o Português. Dicas e convenções usadas na edição e formatação de código em Python.


== Cookbook ==

 * MapeandoErrosParaExceções - Uma idéia para mapear códigos de erro do sistema operacional para exceções.

 * MonitorandoSocketsComPygtk - Exemplo de como usar as funções de monitorar IO embutidas em PyGTK para manipular sockets e arquivos de forma assíncrona.

 * MonitorandoSocketsComTkinter - A mesma idéia do exemplo anterior, porém usando Tkinter.

 * VerificadorDeCpf - Módulo contendo funções e classe para verificação de números de CPF.

 * WeakList - Especialização da classe List para que não incremente a contagem de referências dos objetos contidos nela.

 * ([http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/202052 Moving Geometry Methods in Tkinter]) - Como criar um novo componente em Tkinter através da união de componentes existentes, mantendo a utilização dos métodos uniforme 


= Contato =

Através dos e-mails: 

pedro.werneck em terra.com.br
pedro.werneck em bol.com.br

Do ICQ: 35797487

Costumo frequentar os canais de IRC: #python-br em irc.freenode.org e  #python em irc.brasnet.org

E meu blog em http://diaspar.blogspot.com, embora não seja específico sobre o assunto, costumo comentar algo sobre Python por lá.


